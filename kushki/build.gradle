plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'maven'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.amplifyframework:core:1.16.13'
    implementation 'com.amplifyframework:aws-auth-cognito:1.16.12'
    implementation 'com.siftscience:sift-android:0.11.1'
    //Cardinal Mobile SDK
    implementation 'org.jfrog.cardinalcommerce.gradle:cardinalmobilesdk:2.2.5-4'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'junit:junit:4.13.2'
    implementation ('com.github.tomakehurst:wiremock:2.27.2') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    implementation 'org.apache.commons:commons-text:1.7'
    implementation 'org.slf4j:slf4j-nop:1.7.30'
    implementation 'org.mockito:mockito-core:3.6.28'
    implementation 'org.objenesis:objenesis:3.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}

task unitTest(type: Test) {
    include 'com/kushkipagos/tests/**'
    exclude 'com/kushkipagos/tests/integration/**'
}

task integrationTest(type: Test) {
    include 'com/kushkipagos/tests/integration/**'
}

ext {
    license = 'MIT'
    licenseUrl = 'https://github.com/Kushki/kushki-android/blob/master/LICENSE.txt'
    gitUrl = 'https://github.com/Kushki/kushki-android.git'
    scmUrl = 'scm:git:' + gitUrl
    packageName = 'kushki-android'
    packageDescription = 'Librer√≠a para integrarse con Kushki desde Android'
    versionTag = version
}
/*
install {
    repositories.mavenInstaller {
        pom.artifactId = packageName
        pom.version = versionTag
        pom.project {
            name packageName
            description packageDescription
            url gitUrl
            organization {
                name 'Kushki S.A.'
                url 'https://www.kushkipagos.com'
            }
            developers {
                developer {
                    id 'kushki'
                    name 'kushki'
                    email 'dev@kushkipagos.com'
                }
            }
            licenses {
                license {
                    name license
                    url licenseUrl
                    distribution 'repo'
                }
            }
            scm {
                url gitUrl
                connection scmUrl
                developerConnection scmUrl
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = packageName
        desc = packageDescription
        userOrg = user
        licenses = [license]
        vcsUrl = gitUrl
        websiteUrl = gitUrl
        publicDownloadNumbers = false
        version {
            name = versionTag
            desc = packageDescription
            vcsTag = 'v' + versionTag
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                user = System.getenv('MAVEN_CENTRAL_USER')
                password = System.getenv('MAVEN_CENTRAL_TOKEN')
                close = '1'
            }
        }
    }
}*/
